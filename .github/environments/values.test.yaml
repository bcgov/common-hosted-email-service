---
autoscaling:
  enabled: true
  maxReplicas: 4

config:
  enabled: true
  configMap:
    KC_ENABLED: "true"
    KC_PUBLICKEY: >-
      MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1dLa3e2Q65cvzoKYdqSu/Qkoi5fbG9FF++u0TVm3461sS7uLo2aIviNXHrfzgu4RKnzoy51VXhAfeT58mGiAweJiRyILr0OtwbDEd/W9D4Y8FdWV37Ltmb4D1M0kCHPHo9wkl5aGZj0VFgExdFXenSDlNuglZpNuAVOwWTL7hX1Cc+5Z5hX8891fcxcdAF/GkDGcyIteHV04aeoCWEMak0gSpGsNUgEhn7FUHI6maqiaBdoyOWn0Jbw/JpqewcD9ZYFLzZTMuBssTXJt4ipTibeqbI/bAdCtxXLJgmpkyMSA/KQeHLmBPdq3ayctoDRpqVMHsnC31Hm7Fz8aDHKaDwIDAQAB
    KC_REALM: comsvcauth
    KC_SERVERURL: "https://test.loginproxy.gov.bc.ca/auth"
    SERVER_LOGLEVEL: info

postgres:
  enabled: true

  # --------------------------------
  # --------crunchydb config: ------
  # --------------------------------

  # --- resource allocation ----
  instances:
    - name: db # do not change this name after initial install, pvc (data) and stateful sets will be deleted
      replicas: 3
      dataVolumeClaimSpec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 2Gi
        storageClassName: "netapp-block-standard"
      resources:
        requests:
          cpu: 50m
          memory: 128Mi
        limits:
          cpu: 100m
          memory: 256Mi
      sidecars:
        replicaCertCopy:
          resources:
            requests:
              cpu: 1m
              memory: 32Mi
            limits:
              cpu: 50m
              memory: 64Mi

  # -------- backups ---------
  pgBackRestConfig:
    manual:
      repoName: repo1
      options:
        - --type=full
    repoHost:
      resources:
        requests:
          cpu: 20m
          memory: 128Mi
        limits:
          cpu: 50m
          memory: 256Mi
    sidecars:
      pgbackrest:
        resources:
          requests:
            cpu: 5m
            memory: 16Mi
          limits:
            cpu: 20m
            memory: 64Mi
      pgbackrestConfig:
        resources:
          requests:
            cpu: 5m
            memory: 32Mi
          limits:
            cpu: 20m
            memory: 64Mi
    jobs:
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
        limits:
          cpu: 50m
          memory: 128Mi
    configuration:
      # secret for saving backups to S3
      - secret:
          name: pgbackrest-s3
    global:
      # log-level-console: debug
      # --- pvc
      repo1-retention-full: "2"
      repo1-retention-diff: "3"
      # --- s3
      repo2-path: /backups/common-hosted-email-service/postgres/test
      repo2-retention-full: "30"
      repo2-s3-uri-style: path
    repos:
      - name: repo1
        schedules:
          full: "0 7 * * *" # full backup every day at 7am
          differential: "0 */2 * * *" # differential every 2 hours
        volume:
          volumeClaimSpec:
            accessModes:
              - "ReadWriteOnce"
            resources:
              requests:
                storage: 2Gi
            storageClassName: "netapp-file-backup"
      - name: repo2
        schedules:
          full: "0 3 * * *" # full backup every day at 3am
        s3:
          bucket: csstops
          endpoint: https://nrs.objectstore.gov.bc.ca
          region: us-east-1
    # -- restore from backup
    # ref: https://access.crunchydata.com/documentation/postgres-operator/latest/tutorials/backups-disaster-recovery/disaster-recovery#perform-an-in-place-point-in-time-recovery-pitr
    restore:
      enabled: false
      repoName: repo1 # eg `repo1` (pvc) or `repo2` (s3)
      options:
        - --type=time
        - --target="2024-10-28 14:15:11-04"

redis:
  architecture: replication
  global:
    storageClass: netapp-block-standard
  enabled: true
  auth:
    enabled: false
  image:
    registry: artifacts.developer.gov.bc.ca/docker-remote
  replica:
    shareProcessNamespace: true
    replicaCount: 3
    persistentVolumeClaimRetentionPolicy:
      enabled: true
      whenDeleted: Delete
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 25Mi
    resources:
      limits:
        cpu: 50m
        memory: 150Mi
      requests:
        cpu: 20m
        memory: 50Mi
  sentinel:
    enabled: true
    quorum: 1
    podSecurityContext: {}
    containerSecurityContext: {}
    image:
      registry: artifacts.developer.gov.bc.ca/docker-remote
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 25Mi
      storageClass: netapp-block-standard
    persistentVolumeClaimRetentionPolicy:
      enabled: true
      whenScaled: Delete
      whenDeleted: Delete
    resources:
      limits:
        cpu: 50m
        memory: 150Mi
      requests:
        cpu: 20m
        memory: 50Mi
